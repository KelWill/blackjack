// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.AppView = (function(_super) {
    __extends(AppView, _super);

    function AppView() {
      this.flasher = __bind(this.flasher, this);
      _ref = AppView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AppView.prototype.className = 'table';

    AppView.prototype.template = _.template('\
    <button class="hit-button">Hit</button> <button class="stand-button">Stand</button>\
    <div class="player-hand-container"></div>\
    <div class="dealer-hand-container"></div>\
  ');

    AppView.prototype.events = {
      "click .hit-button": function() {
        return this.model.get('playerHand').hit();
      },
      "click .stand-button": function() {
        this.model.get('playerHand').stand();
        return this.model.get('dealerHand').hit();
      }
    };

    AppView.prototype.initialize = function() {
      var _this = this;
      this.model.on('ended', function() {
        var that;
        $('button').hide();
        $('.table').prepend('<button class="playAgain">Would you care to play again, Sir or Madam?</button>');
        that = _this;
        _this.flasher();
        return $('.playAgain').on('click', function() {
          that.model.initialize();
          return that.render();
        });
      });
      return this.render();
    };

    AppView.prototype.render = function() {
      this.$el.children().detach();
      this.$el.html(this.template());
      this.$('.player-hand-container').html(new HandView({
        collection: this.model.get('playerHand')
      }).el);
      return this.$('.dealer-hand-container').html(new HandView({
        collection: this.model.get('dealerHand')
      }).el);
    };

    AppView.prototype.flasher = function() {
      var i;
      console.log("YOU ARE A WINNER");
      $('#winner').text(this.model.text);
      $('#winner').css('display', 'inline');
      i = 1;
      return setInterval(function() {
        $('#winner').css('font-size', i + 'px');
        $('#winner').css('color', ['green', 'blue', 'red', 'purple', 'pink', 'white', 'brown', 'orange'][Math.floor(Math.random() * 8)]);
        return i++;
      }, 20);
    };

    return AppView;

  })(Backbone.View);

}).call(this);
